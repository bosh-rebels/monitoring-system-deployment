---
name: ((deployment))
addons:
- name: bpm
  jobs:
    - name: bpm
      release: bpm

releases:
  - name: elasticsearch
    version: ((elasticsearch_version))
    sha1: ((elasticsearch_sha1))

  - name: kibana
    version: ((kibana_version))
    sha1: ((kibana_sha1))

  - name: metricbeat
    version: ((metricbeat_version))
    sha1: ((metricbeat_sha1))

  - name: zookeeper
    version: ((zookeeper_version))
    sha1: ((zookeeper_sha1))

  - name: kafka
    version: ((kafka_version))
    sha1: ((kafka_sha1))

  - name: cmak
    version: ((cmak_version))
    sha1: ((cmak_sha1))

  - name: bpm
    version: ((bpm_version))
    sha1: ((bpm_sha1))

  - name: logstash
    version: ((logstash_version))
    sha1: ((logstash_sha1))

stemcells:
  - os: ((stemcell_os))
    alias: default
    version: ((stemcell_version))

instance_groups:
  - name: elasticsearch
    instances: ((elasticsearch_instances))
    vm_type: ((elasticsearch_vm_type))
    stemcell: default
    persistent_disk_type: ((elasticsearch_persistent_disk_type))
    azs: ((azs))
    networks:
      - name: ((elasticsearch_network))
    jobs:
      - name: elasticsearch
        release: elasticsearch
        provides:
          elasticsearch-server-address:
            as: elasticsearch-address
        custom_provider_definitions:
        - name: elasticsearch-server-address
          type: address
        properties:
          elasticsearch:
            node:
              allow_master: true
              allow_ingest: true
              allow_data: true
            config_options:
              xpack.monitoring.enabled: true
              xpack.monitoring.collection.enabled: true
              xpack.monitoring.collection.interval: 10s
              xpack.monitoring.history.duration: 7d

  - name: kibana
    instances: ((kibana_instances))
    vm_type: ((kibana_vm_type))
    stemcell: default
    persistent_disk_type: ((kibana_persistent_disk_type))
    azs: ((azs))
    networks:
      - name: ((kibana_network))
    jobs:
      - name: kibana
        release: kibana
        properties:
          kibana:
            xpack:
              encryptedSavedObjects:
                encryptionKey: ((kibana_encryptionkey))

  - name: zookeeper
    instances: ((zookeeper_instances))
    vm_type: ((zookeeper_vm_type))
    stemcell: default
    persistent_disk_type: ((zookeeper_persistent_disk_type))
    azs: ((azs))
    networks:
      - name: ((zookeeper_network))
    jobs:
      - name: zookeeper
        release: zookeeper
        properties: {}
      - name: status
        release: zookeeper

  - name: kafka
    instances: ((kafka_instances))
    vm_type: ((kafka_vm_type))
    stemcell: default
    persistent_disk_type: ((kafka_persistent_disk_type))
    azs: ((azs))
    networks:
      - name: ((kafka_network))
    jobs:
      - name: kafka
        release: kafka
        provides:
          kafka-server-address:
            as: kafka-address
        custom_provider_definitions:
        - name: kafka-server-address
          type: address
        properties:
          topics: &topic_template
            - name: ((kafka_topic))
              replication_factor: 2
              partitions: 3
              configurations:
                - "--config retention.bytes=10737418240"
                - "--config cleanup.policy=delete"
      - name: generatetopics
        release: kafka
      - name: reassignpartitions
        release: kafka
        properties:
          topics: *topic_template

  - name: logstash
    instances: ((logstash_instances))
    vm_type: ((logstash_vm_type))
    stemcell: default
    persistent_disk_type: ((logstash_persistent_disk_type))
    azs: ((azs))
    networks:
      - name: ((logstash_network))
    jobs:
      - name: logstash
        release: logstash
        properties:
          logstash:
            kafka:
              topic: ((kafka_topic))
              indexpattern: ((index_pattern))

  - name: cmak
    instances: ((cmak_instances))
    vm_type: ((cmak_vm_type))
    stemcell: default
    azs: ((azs))
    networks:
      - name: ((cmak_network))
    jobs:
      - name: cmak
        release: cmak
        properties:
          password: ((cmak_password))

  - name: elasticsearch-upgrade-errands
    lifecycle: errand
    instances: 1
    vm_type: ((errands_vm_type))
    stemcell: default
    errands_persistent_disk_type: ((errands_persistent_disk_type))
    azs: ((azs))
    networks:
      - name: ((errands_network))
    jobs:
      - name: pre-upgrade
        release: elasticsearch
      - name: post-upgrade
        release: elasticsearch
      - name: callapi
        release: elasticsearch
        properties:
          calls:
            - endpoint: /_ilm/policy/delete_indices_older_than_7days
              action: PUT
              headers:
                - Content-Type: application/json
              payload: |
                {
                  "policy": {
                    "phases": {
                      "delete": {
                        "min_age": "7d",
                        "actions": {
                          "delete": {}
                        }
                      }
                    }
                  }
                }
            - endpoint: /_index_template/payhub-index-template
              action: PUT
              headers:
                - Content-Type: application/json
              payload: |
                {
                  "priority": 115,
                  "index_patterns": ["*-payhub-*" , "*-metrics-*" , "*-system-*"],
                  "template": {
                    "settings": {
                      "number_of_shards": 1,
                      "number_of_replicas": 1,
                      "index.lifecycle.name": "delete_indices_older_than_5mins"
                    }
                  }
                }

  - name: monitoring-system-smoke-tests
    lifecycle: errand
    instances: 1
    vm_type: ((errands_vm_type))
    stemcell: default
    azs: ((azs))
    networks:
      - name: ((errands_network))
    jobs:
      - name: smoke-tests
        release: zookeeper
      - name: sanitytest
        release: kafka

variables:
  - name: cmak_password
    type: password
  - name: kibana_encryptionkey
    type: password
    options:
      length: 32

update:
  canaries: 1
  max_in_flight: 1
  serial: true
  canary_watch_time: 30000-600000
  update_watch_time: 30000-600000
